# Define color codes
red='\033[1;31m'
green='\033[1;32m'
yellow='\033[1;33m'
blue='\033[1;34m'
magenta='\033[1;35m'
cyan='\033[1;36m'
gray='\033[1;90m'
clear='\033[0m'
light_red='\033[1;91m'
light_green='\033[1;92m'
light_yellow='\033[1;93m'
light_blue='\033[1;94m'
light_magenta='\033[1;95m'
light_cyan='\033[1;96m'
white='\033[1;97m'

# Progress bar function
progress_bar() {
  local pid=$1
  local delay=0.1
  local progress=0
  local progress_char="▇"
  local width=50

  while kill -0 $pid 2>/dev/null; do
    local elapsed=$((progress * width / 100))
    printf "${green}\r["
    for ((i = 0; i < elapsed; i++)); do
      printf "${green}${progress_char}"
    done
    for ((i = elapsed; i < width; i++)); do
      printf " "
    done
    printf "] ${progress}%%"
    progress=$(( (progress + 1) % 101 ))
    sleep $delay
  done
  printf "${green}\r["
  for ((i = 0; i < width; i++)); do
    printf "${progress_char}"
  done
  printf "] 100%%${clear}\n"
  echo -ne '\n'
}

# ASCII Art Banner
echo -e "
${cyan}
  __  __ ______ _____  _____ _______ _______    _____  ________      __
 |  \/  |  ____|  __ \|_   _|__   __|__   __|  |  __ \|  ____\ \    / /
 | \  / | |__  | |__) | | |    | |     | |     | |  | | |__   \ \  / /
 | |\/| |  __| |  _  /  | |    | |     | |     | |  | |  __|   \ \/ /
 | |  | | |____| | \ \ _| |_   | |     | |     | |__| | |____   \  /
 |_|  |_|______|_|  \_\_____|  |_|     |_|     |_____/|______|   \/
${clear}
"

# Fun Messages
echo -e "Let's hope you are not ${red}DUMB${clear}!"
echo -ne '\n'

# Run yarn types in the background and capture output
echo -e "${yellow}Running type checks...${clear}"
echo -ne '\n'
(yarn types > types_output.log 2>&1) &
YARN_TYPES_PID=$!

# Call the progress_bar function
progress_bar $YARN_TYPES_PID

# Wait for yarn types to finish
wait $YARN_TYPES_PID
YARN_TYPES_EXIT_CODE=$?

# Display yarn types output
cat types_output.log
rm types_output.log

# Check if yarn types succeeded
if [ $YARN_TYPES_EXIT_CODE -eq 0 ]; then
  echo -e "${green}Type checks passed...${clear} ✅"
else
  echo -e "${red}Type checks failed...${clear} ❌"
  exit $YARN_TYPES_EXIT_CODE
fi
echo -ne '\n'

# Run linting in the background and capture output
echo -e "${yellow}Running linting...${clear}"
echo -ne '\n'
(yarn lint > lint_output.log 2>&1) &
YARN_LINT_PID=$!

# Call the progress_bar function
progress_bar $YARN_LINT_PID

# Wait for yarn lint to finish
wait $YARN_LINT_PID
YARN_LINT_EXIT_CODE=$?

# Display yarn lint output
cat lint_output.log
rm lint_output.log

# Check if yarn lint succeeded
if [ $YARN_LINT_EXIT_CODE -eq 0 ]; then
  echo -e "${green}Linting passed...${clear} ✅"
else
  echo -e "${red}Linting failed...${clear} ❌"
  exit $YARN_LINT_EXIT_CODE
fi
echo -ne '\n'

# Run yarn audit in the background and capture output
# echo -e "${yellow}Checking for vulnerabilities...${clear}"
# echo -ne '\n'
# (yarn audit > audit_output.log 2>&1) &
# YARN_AUDIT_PID=$!

# Call the progress_bar function
# progress_bar $YARN_AUDIT_PID

# Wait for yarn audit to finish
# wait $YARN_AUDIT_PID
# YARN_AUDIT_EXIT_CODE=$?

# Display yarn audit output
# cat audit_output.log
# rm audit_output.log
# Check if yarn audit succeeded
# if [ $YARN_AUDIT_EXIT_CODE -eq 0 ]; then
#   echo -e "${green}No vulnerabilities found...${clear} ✅"
# else
#   echo -e "${red}Vulnerabilities found...${clear} ❌"
#   exit $YARN_AUDIT_EXIT_CODE
# fi
# echo -ne '\n'

# Final message
echo -e "${yellow}Seems like you are a ${red}C${yellow}L${green}E${cyan}V${blue}E${magenta}R ${light_red}D${light_yellow}E${light_green}V${light_cyan}E${light_blue}L${light_magenta}O${light_red}P${light_yellow}E${light_green}R${clear} 👌"
echo -ne '\n'
echo -e "${green}GOOD TO GO${clear} 🚀🚀🚀"
